/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package vista;


import controlador.ComponentesControlador;
import controlador.DepositoControlador;
import controlador.EntradasControlador;
import controlador.StockControlador;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFormattedTextField;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import static javax.swing.JOptionPane.YES_NO_OPTION;
import static javax.swing.JOptionPane.YES_OPTION;
import static javax.swing.JOptionPane.showConfirmDialog;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;
import modelo.Entrada;
import modelo.EntradaDetalle;
import modelo.Stock;

/**
 *
 * @author Grossling
 */
public class entradaForm2 extends javax.swing.JInternalFrame {

    /**
     * Creates new form entradaForm2
     */
    public entradaForm2() {
        initComponents();
    }

    Entrada ent = new Entrada();
    EntradaDetalle entD = new EntradaDetalle();
    
    EntradasControlador entCont = new EntradasControlador();
    Stock stock = new Stock();
    StockControlador stockCont = new StockControlador();
    DepositoControlador depBD = new DepositoControlador();
    
    DefaultTableModel modeloC = new DefaultTableModel();
    DefaultTableModel modeloD = new DefaultTableModel();
    DefaultComboBoxModel modelCombo = new DefaultComboBoxModel();
    
    int k;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        bNuevo = new org.edisoncor.gui.button.ButtonTask();
        bCancelar = new org.edisoncor.gui.button.ButtonTask();
        bGuardar = new org.edisoncor.gui.button.ButtonTask();
        bBuscar = new org.edisoncor.gui.button.ButtonTask();
        bImprimir = new org.edisoncor.gui.button.ButtonTask();
        jPanel2 = new javax.swing.JPanel();
        bPrimero = new org.edisoncor.gui.button.ButtonTask();
        bAnterior = new org.edisoncor.gui.button.ButtonTask();
        bSiguiente = new org.edisoncor.gui.button.ButtonTask();
        bUltimo = new org.edisoncor.gui.button.ButtonTask();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        dFecha = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtComentarios = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        comboAjuste = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        comboDeposito = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        txtProyecto = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tDetalleEntrada = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Entrada");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(51, 94, 137));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jLabel1.setBackground(new java.awt.Color(51, 94, 137));
        jLabel1.setFont(new java.awt.Font("Aharoni", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ENTRADAS AL DEPOSITO");
        jPanel3.add(jLabel1, java.awt.BorderLayout.CENTER);

        jPanel1.setFont(new java.awt.Font("Aharoni", 0, 12)); // NOI18N

        bNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/1430632277_document_add.png"))); // NOI18N
        bNuevo.setText("Nuevo");
        bNuevo.setCategoryFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        bNuevo.setCategorySmallFont(new java.awt.Font("Aharoni", 0, 5)); // NOI18N
        bNuevo.setDescription(" ");
        bNuevo.setFont(new java.awt.Font("Algerian", 0, 5)); // NOI18N
        bNuevo.setIconTextGap(2);
        bNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bNuevoMouseClicked(evt);
            }
        });

        bCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/1430630934_cross.png"))); // NOI18N
        bCancelar.setText("Cancelar");
        bCancelar.setCategoryFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        bCancelar.setCategorySmallFont(new java.awt.Font("Aharoni", 0, 5)); // NOI18N
        bCancelar.setDescription(" ");
        bCancelar.setFont(new java.awt.Font("Algerian", 0, 5)); // NOI18N
        bCancelar.setIconTextGap(2);
        bCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bCancelarMouseClicked(evt);
            }
        });

        bGuardar.setForeground(new java.awt.Color(0, 51, 102));
        bGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/1430629542_save_as-2-32.png"))); // NOI18N
        bGuardar.setText("Guardar");
        bGuardar.setCategoryFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        bGuardar.setCategorySmallFont(new java.awt.Font("Aharoni", 0, 5)); // NOI18N
        bGuardar.setDescription(" ");
        bGuardar.setFont(new java.awt.Font("Algerian", 0, 5)); // NOI18N
        bGuardar.setIconTextGap(2);
        bGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bGuardarMouseClicked(evt);
            }
        });

        bBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/1430631782_search_32.png"))); // NOI18N
        bBuscar.setText("Buscar");
        bBuscar.setCategoryFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        bBuscar.setCategorySmallFont(new java.awt.Font("Aharoni", 0, 5)); // NOI18N
        bBuscar.setDescription(" ");
        bBuscar.setFont(new java.awt.Font("Algerian", 0, 5)); // NOI18N
        bBuscar.setIconTextGap(2);
        bBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bBuscarMouseClicked(evt);
            }
        });

        bImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/1431312054_Print.png"))); // NOI18N
        bImprimir.setText("Imprimir");
        bImprimir.setCategoryFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        bImprimir.setCategorySmallFont(new java.awt.Font("Aharoni", 0, 5)); // NOI18N
        bImprimir.setDescription(" ");
        bImprimir.setFont(new java.awt.Font("Algerian", 0, 5)); // NOI18N
        bImprimir.setIconTextGap(2);
        bImprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bImprimirMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(bGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(bCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(bBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(bImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel2.setFont(new java.awt.Font("Aharoni", 0, 12)); // NOI18N

        bPrimero.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/1431297857_go-first-32.png"))); // NOI18N
        bPrimero.setText("Primero");
        bPrimero.setCategoryFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        bPrimero.setCategorySmallFont(new java.awt.Font("Aharoni", 0, 5)); // NOI18N
        bPrimero.setDescription(" ");
        bPrimero.setFont(new java.awt.Font("Algerian", 0, 5)); // NOI18N
        bPrimero.setIconTextGap(2);
        bPrimero.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bPrimeroMouseClicked(evt);
            }
        });

        bAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/1431298335_go-previous-32.png"))); // NOI18N
        bAnterior.setText("Anterior");
        bAnterior.setCategoryFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        bAnterior.setCategorySmallFont(new java.awt.Font("Aharoni", 0, 5)); // NOI18N
        bAnterior.setDescription(" ");
        bAnterior.setFont(new java.awt.Font("Algerian", 0, 5)); // NOI18N
        bAnterior.setIconTextGap(2);
        bAnterior.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bAnteriorMouseClicked(evt);
            }
        });

        bSiguiente.setForeground(new java.awt.Color(0, 51, 102));
        bSiguiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/1431298287_go-next-32.png"))); // NOI18N
        bSiguiente.setText("Siguiente");
        bSiguiente.setCategoryFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        bSiguiente.setCategorySmallFont(new java.awt.Font("Aharoni", 0, 5)); // NOI18N
        bSiguiente.setDescription(" ");
        bSiguiente.setFont(new java.awt.Font("Algerian", 0, 5)); // NOI18N
        bSiguiente.setIconTextGap(2);
        bSiguiente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bSiguienteMouseClicked(evt);
            }
        });

        bUltimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/1431297875_go-last-32.png"))); // NOI18N
        bUltimo.setText("Ultimo");
        bUltimo.setCategoryFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        bUltimo.setCategorySmallFont(new java.awt.Font("Aharoni", 0, 5)); // NOI18N
        bUltimo.setDescription(" ");
        bUltimo.setFont(new java.awt.Font("Algerian", 0, 5)); // NOI18N
        bUltimo.setIconTextGap(2);
        bUltimo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bUltimoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(bPrimero, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bUltimo, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(89, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bPrimero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bUltimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del Documento", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Aharoni", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        jLabel2.setText("Numero");

        txtCodigo.setName("txtcodigo"); // NOI18N
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoKeyPressed(evt);
            }
        });

        jLabel7.setText("Fecha de ingreso");

        dFecha.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));

        jLabel3.setText("Comentarios");

        txtComentarios.setColumns(20);
        txtComentarios.setRows(5);
        txtComentarios.setName("txtdescripcion"); // NOI18N
        jScrollPane4.setViewportView(txtComentarios);

        jLabel4.setText("Ajuste");

        comboAjuste.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NO", "SI" }));

        jLabel8.setText("Deposito");

        jLabel5.setText("Proyecto");

        txtProyecto.setName("txtcodigo"); // NOI18N
        txtProyecto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtProyectoKeyPressed(evt);
            }
        });

        tDetalleEntrada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descripcion", "Precio", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tDetalleEntrada.setColumnSelectionAllowed(true);
        tDetalleEntrada.setRowHeight(20);
        tDetalleEntrada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tDetalleEntradaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tDetalleEntrada);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 954, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(23, 23, 23)
                                .addComponent(dFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel8))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboAjuste, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboDeposito, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtProyecto, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(comboAjuste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)
                                .addComponent(txtProyecto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(dFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboDeposito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 981, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bNuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bNuevoMouseClicked
        if (evt.isMetaDown()){
            return;
        } else if (bNuevo.isEnabled() == false){
            return;
        } else {
            nuevo();
        }
    }//GEN-LAST:event_bNuevoMouseClicked

    private void bCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bCancelarMouseClicked
        if (evt.isMetaDown()){
            return;
        } else if (bCancelar.isEnabled() == false){
            return;
        } else {
            cancelar();
        }
    }//GEN-LAST:event_bCancelarMouseClicked

    private void bGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bGuardarMouseClicked
        if (evt.isMetaDown()){
            return;
        } else if (bGuardar.isEnabled() == false){
            return;
        } else {
            guardar();
        }
    }//GEN-LAST:event_bGuardarMouseClicked

    private void bBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bBuscarMouseClicked
        if (evt.isMetaDown()){
            return;
        } else if (bBuscar.isEnabled() == false){
            return;
        } else {
            buscar();
        }
    }//GEN-LAST:event_bBuscarMouseClicked

    private void bPrimeroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bPrimeroMouseClicked
        if (evt.isMetaDown()){
            return;
        } else if (bPrimero.isEnabled() == false){
            return;
        } else {
            primero();
        }
    }//GEN-LAST:event_bPrimeroMouseClicked

    private void bAnteriorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bAnteriorMouseClicked
        if (evt.isMetaDown()){
            return;
        } else if (bAnterior.isEnabled() == false){
            return;
        } else {
            anterior();
        }
    }//GEN-LAST:event_bAnteriorMouseClicked

    private void bSiguienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSiguienteMouseClicked
        if (evt.isMetaDown()){
            return;
        } else if (bSiguiente.isEnabled() == false){
            return;
        } else {
            siguiente();
        }
    }//GEN-LAST:event_bSiguienteMouseClicked

    private void bUltimoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bUltimoMouseClicked
        if (evt.isMetaDown()){
            return;
        } else if (bUltimo.isEnabled() == false){
            return;
        } else {
            ultimo();
        }
    }//GEN-LAST:event_bUltimoMouseClicked

    private void txtCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyPressed
        if (dFecha.isEnabled() == true){
            return;
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if ("*".equals(txtCodigo.getText())) {

                BuscarForm bf = new BuscarForm(null, true);
                bf.columnas = "numero, fecha_ingreso, comentarios, proyecto";
                bf.tabla = "entrada";
                bf.order = "codigo_interno";
                bf.filtroBusqueda = "";
                bf.setLocationRelativeTo(this);
                bf.setVisible(true);

                for(int c=0; c<modeloC.getRowCount(); c ++){
                    if (modeloC.getValueAt(c, 1).toString().equals(bf.retorno)){
                        modoBusqueda(false);
                        establecerBotones("Edicion");
                        k = c;
                        datosActuales();
                        return;
                    }
                }

            }

            for(int c=0; c<modeloC.getRowCount(); c ++){
                if (modeloC.getValueAt(c, 1).toString().equals(txtCodigo.getText())){
                    modoBusqueda(false);
                    establecerBotones("Edicion");
                    k = c;
                    datosActuales();
                    return;
                }
            }
        }
    }//GEN-LAST:event_txtCodigoKeyPressed

    private void txtProyectoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProyectoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if ("*".equals(txtProyecto.getText())) {

                BuscarForm bf = new BuscarForm(null, true);
                bf.columnas = "codigo, descripcion, id";
                bf.tabla = "proyectos";
                bf.order = "id";
                bf.filtroBusqueda = "";
                bf.setLocationRelativeTo(this);
                bf.setVisible(true);
                
                txtProyecto.setText(bf.retorno);

            }
        }
    }//GEN-LAST:event_txtProyectoKeyPressed

    private void tDetalleEntradaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tDetalleEntradaKeyPressed
        if (tDetalleEntrada.isCellSelected(tDetalleEntrada.getSelectedRow(), 1) == true){
            if (evt.getKeyCode() == KeyEvent.VK_TAB) {
                if ("".equals(tDetalleEntrada.getValueAt(tDetalleEntrada.getSelectedRow(), 0).toString()))
                {
                    BuscarForm bf = new BuscarForm(null, true);
                    bf.columnas = "codigo, descripcion";
                    bf.tabla = "componentes where servicio = 0 --";
                    bf.order = "codigo_interno";
                    bf.filtroBusqueda = "";
                    bf.setLocationRelativeTo(this);
                    bf.setVisible(true);

                    tDetalleEntrada.setValueAt(bf.retorno, tDetalleEntrada.getSelectedRow(), 0);
                    ComponentesControlador cmpCont = new ComponentesControlador();
                    tDetalleEntrada.setValueAt(cmpCont.getDescripcion(bf.retorno), tDetalleEntrada.getSelectedRow(), 1);
                    tDetalleEntrada.setValueAt(cmpCont.getCosto(bf.retorno), tDetalleEntrada.getSelectedRow(), 2);
                    tDetalleEntrada.setEditingColumn(3);
                }
            }
        }
    }//GEN-LAST:event_tDetalleEntradaKeyPressed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        getDepositos();
        nuevo();
    }//GEN-LAST:event_formInternalFrameOpened

    private void bImprimirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bImprimirMouseClicked
//          try {
//            JasperReport report = JasperCompileManager.compileReport("src/reportes/componentes.jrxml");
//            JasperPrint print = JasperFillManager.fillReport(report, new HashMap(), HibernateUtil.getConnection());
//            JasperViewer.viewReport(print, false);
// 
//        } catch (JRException jRException) {
//            showMessageDialog(null, "No se pudo visualizar el reporte: " + jRException, "Error", ERROR_MESSAGE);
//        } catch (SQLException ex) {
//            showMessageDialog(null, "No se pudo visualizar el reporte: " + ex, "Error", ERROR_MESSAGE);
//        }
    }//GEN-LAST:event_bImprimirMouseClicked
    
    private void nuevo() {
        limpiar();
        establecerBotones("Nuevo");
        comboAjuste.setSelectedIndex(0);
        txtCodigo.requestFocusInWindow();
        nuevoDetalle();
    }
    
     private void establecerBotones(String modo) {
        switch (modo) {
            case "Nuevo":
                bNuevo.setEnabled(false);
                bCancelar.setEnabled(true);
                bGuardar.setEnabled(true);
                bAnterior.setEnabled(false);
                bSiguiente.setEnabled(false);
                bPrimero.setEnabled(false);
                bUltimo.setEnabled(false);
                bBuscar.setEnabled(false);
                bImprimir.setEnabled(false);
                tDetalleEntrada.setEnabled(true);
                comboDeposito.setEnabled(true);
                break;
            case "Edicion":
                bNuevo.setEnabled(true);
                bCancelar.setEnabled(false);
                bGuardar.setEnabled(true);
                bAnterior.setEnabled(true);
                bSiguiente.setEnabled(true);
                bPrimero.setEnabled(true);
                bUltimo.setEnabled(true);
                bBuscar.setEnabled(true);
                bImprimir.setEnabled(true);
                tDetalleEntrada.setEnabled(false);
                comboDeposito.setEnabled(false);
                break;
            case "Vacio":
                bNuevo.setEnabled(true);
                bCancelar.setEnabled(false);
                bGuardar.setEnabled(false);
                bAnterior.setEnabled(false);
                bSiguiente.setEnabled(false);
                bPrimero.setEnabled(false);
                bUltimo.setEnabled(false);
                bBuscar.setEnabled(false);
                bImprimir.setEnabled(false);
                tDetalleEntrada.setEnabled(false);
                break;
            case "Buscar":
                bNuevo.setEnabled(false);
                bCancelar.setEnabled(true);
                bGuardar.setEnabled(false);
                bAnterior.setEnabled(false);
                bSiguiente.setEnabled(false);
                bPrimero.setEnabled(false);
                bUltimo.setEnabled(false);
                bImprimir.setEnabled(false);
                tDetalleEntrada.setEnabled(false);
                break;
        }
    }
     
     @SuppressWarnings("UnnecessaryReturnStatement")
    private void guardar(){
        if ("".equals(txtCodigo.getText())) {
            showMessageDialog(null, "Debe ingresar un código.", "Atención", INFORMATION_MESSAGE);
            txtCodigo.requestFocusInWindow();
            return;
        } else if ("".equals(dFecha.getText())) {
            showMessageDialog(null, "Debe ingresar la fecha de ingreso", "Atención", INFORMATION_MESSAGE);
            dFecha.requestFocusInWindow();
            return;
        } 
        else {
            try {
                ent.setCodigoInterno(entCont.nuevoCodigo());
            } catch (Exception ex) {
                 showMessageDialog(null, ex, "Error", ERROR_MESSAGE);
            }
            try { 
                ent.setDeposito(depBD.getCodigo((String) comboDeposito.getSelectedItem()));
            } catch (Exception ex) {
                showMessageDialog(null, "setCodDeposito " + ex, "Error", ERROR_MESSAGE);
            }
            try {
                SimpleDateFormat a = new SimpleDateFormat("dd/MM/yyyy");
                Date fecha = a.parse(dFecha.getText());
                ent.setFechaIngreso(fecha);
            } catch (ParseException ex) {
                Logger.getLogger(entradaForm2.class.getName()).log(Level.SEVERE, null, ex);
            }
            ent.setNumero(Integer.parseInt(txtCodigo.getText()));
            ent.setComentarios(txtComentarios.getText());     
            ent.setAjuste(comboAjuste.getSelectedIndex()); 
            ent.setProyecto(txtProyecto.getText());     
            
            if (bNuevo.isEnabled() == false) {
                try {
                    int i = 0;
                    String dpsto = depBD.getCodigo((String) comboDeposito.getSelectedItem());
                    try {
                        int cod_int = entCont.nuevoCodigo();
                        while (!"".equals(tDetalleEntrada.getValueAt(i, 0).toString())){
                            entD.setLine(entCont.nuevaLinea());
                            if (stockCont.tieneCodStock(tDetalleEntrada.getValueAt(i, 0).toString(),dpsto) == 0){
                                stock.setLine(stockCont.nuevoCodigo());
                            } else if ("".equals(tDetalleEntrada.getValueAt(i, 0).toString()) || "".equals(tDetalleEntrada.getValueAt(i, 1).toString())
                                    || "".equals(tDetalleEntrada.getValueAt(i, 2).toString()) || "".equals(tDetalleEntrada.getValueAt(i, 3).toString())){
                                showMessageDialog(null, "Completar datos", "Atención", INFORMATION_MESSAGE);
                                tDetalleEntrada.requestFocusInWindow();
                                return;
                            }
                            i++;
                        }
                    } catch (Exception ex) {
                         showMessageDialog(null, ex, "Atención", INFORMATION_MESSAGE);
                        bGuardar.requestFocusInWindow();
                        return;
                    }
                 } catch (Exception ex) {
                    showMessageDialog(null, ex, "Atención", INFORMATION_MESSAGE);
                    bGuardar.requestFocusInWindow();
                    return;
                 }
                
                
                
                try {
                    int i = 0;
                    String dpsto = depBD.getCodigo((String) comboDeposito.getSelectedItem());
                    try {
                        int cod_int = entCont.nuevoCodigo();                        
                        while (!"".equals(tDetalleEntrada.getValueAt(i, 0).toString())){
                            entD.setCodigoInterno(cod_int);
                            entD.setLine(entCont.nuevaLinea());
                            entD.setCodigo(tDetalleEntrada.getValueAt(i, 0).toString());
                            entD.setDescripcion(tDetalleEntrada.getValueAt(i, 1).toString());
                            entD.setCantidad(Integer.parseInt(tDetalleEntrada.getValueAt(i, 3).toString()));
                            entD.setPrecio(Integer.parseInt(tDetalleEntrada.getValueAt(i, 2).toString()));
                            if (stockCont.tieneCodStock(tDetalleEntrada.getValueAt(i, 0).toString(),dpsto) == 0){
                                
                                stock.setCantidad(Integer.parseInt(tDetalleEntrada.getValueAt(i, 3).toString()));
                                stock.setCodComponente(tDetalleEntrada.getValueAt(i, 0).toString());
                                stock.setCodDeposito(dpsto);
                                stock.setLine(stockCont.nuevoCodigo());
                                
                                stockCont.insert(stock);
                            } else {                                
                                stockCont.update(tDetalleEntrada.getValueAt(i, 0).toString(), dpsto, Integer.parseInt(tDetalleEntrada.getValueAt(i, 3).toString()));
                            }
                            entCont.insert(entD);
                            i++;
                        }
                    } catch (Exception ex) {
                        showMessageDialog(null, ex, "Atención", INFORMATION_MESSAGE);
                        bGuardar.requestFocusInWindow();
                        return;
                    }
                    entCont.cambiarAEnProceso(txtProyecto.getText());
                    entCont.insert(ent);
                    nuevo();
                    getEntradas();
                    
                } catch (Exception ex) {
                    showMessageDialog(null, ex, "Atención", INFORMATION_MESSAGE);
                    bGuardar.requestFocusInWindow();
                    return;
                }
            } else {
                try {
                    ent.setCodigoInterno((Integer) modeloC.getValueAt(k, 0));
                    entCont.update(ent);
                    getEntradas();
                    datosActuales();
                    getEntradasDetalle();
                } catch (Exception ex) {
                    showMessageDialog(null, ex, "Atención", INFORMATION_MESSAGE);
                    bGuardar.requestFocusInWindow();
                    return;
                }
            }
         }
    }
    
    private void limpiar() {
        txtCodigo.setText("");
        txtProyecto.setText("");
        comboAjuste.setSelectedIndex(0);
        tDetalleEntrada.removeAll();
        dFecha.setText("");
        txtComentarios.setText("");
        comboDeposito.setSelectedIndex(0);
    }
    
    private void cancelar(){
        if(showConfirmDialog (null, "Está seguro de cancelar la operación?", "Confirmar", YES_NO_OPTION) == YES_OPTION){
            getEntradas();
            if (modeloC.getRowCount() == 0) {
                limpiar(); 
                modoBusqueda(false); 
                establecerBotones("Vacio"); 
                return;
            }
            if (k >= 0){
                    limpiar(); 
                    datosActuales(); 
                    modoBusqueda(false);
                    establecerBotones("Edicion");
                    return;
            }
        }
    }
    
    private void buscar(){
        limpiar();
        modoBusqueda(true);
        establecerBotones("Buscar");
        nuevoDetalle();
    }
    
    private void modoBusqueda(boolean v){
        if (v == true) {
        txtCodigo.requestFocusInWindow();
        txtCodigo.setBackground(Color.yellow);
        txtProyecto.setEnabled(false);
        dFecha.setEnabled(false);
        txtComentarios.setEnabled(false);
        comboAjuste.setEnabled(false);
        comboDeposito.setEnabled(false);
        } else {
        txtCodigo.requestFocusInWindow();
        txtCodigo.setBackground(Color.white);
        txtProyecto.setEnabled(true);
        dFecha.setEnabled(true);
        txtComentarios.setEnabled(true);
        comboAjuste.setEnabled(true);
        comboDeposito.setEnabled(true);
        }
    }
    
    private void primero(){
        if (modeloC.getRowCount() == 0) {
            showMessageDialog(null, "No hay registros.", "Atención", INFORMATION_MESSAGE); 
            return;
        }    
            k = 0;
            datosActuales();
    }
    
    private void ultimo(){
         if (modeloC.getRowCount() == 0) {
             showMessageDialog(null, "No hay registros.", "Atención", INFORMATION_MESSAGE); 
             return;
         }  
            k = modeloC.getRowCount() - 1;
            datosActuales();
     }
    
    private void anterior(){
        if (modeloC.getRowCount() == 0) {
             showMessageDialog(null, "No hay registros.", "Atención", INFORMATION_MESSAGE); 
             return;
         }      
            k = k - 1;
            if (k < 0) {
                showMessageDialog(null, "Has llegado al primer registro.", "Atención", INFORMATION_MESSAGE);
                k = k + 1;
                return;
            }
            datosActuales();
    }
    
    private void siguiente(){
        if (modeloC.getRowCount() == 0) {
             showMessageDialog(null, "No hay registros.", "Atención", INFORMATION_MESSAGE); 
             return;
         }  
            k = k + 1;
            if (k == modeloC.getRowCount()) {
                showMessageDialog(null, "Has llegado al ultimo registro.", "Atención", INFORMATION_MESSAGE);
                k = k - 1;
                return;
            }
            datosActuales();
    }
    
    private void datosActuales(){
            txtCodigo.setText(modeloC.getValueAt(k, 1).toString());
            
            try {
                SimpleDateFormat formatoRecibido = new SimpleDateFormat("yyyy-MM-dd");
                SimpleDateFormat formatoFinal = new SimpleDateFormat("dd/MM/yyyy");
                Date fecha1;
                fecha1 = formatoRecibido.parse(modeloC.getValueAt(k, 2).toString());
                dFecha.setText(formatoFinal.format(fecha1));
             } catch (ParseException ex) {
                Logger.getLogger(entradaForm2.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            txtComentarios.setText(modeloC.getValueAt(k, 3).toString());
            comboAjuste.setSelectedIndex((int) modeloC.getValueAt(k, 4));
            try {
                comboDeposito.setSelectedItem(depBD.getDato((String) modeloC.getValueAt(k, 5)));
            } catch (Exception ex) {
                showMessageDialog(null, "Combo deposito no obtuvo datos", "Error", ERROR_MESSAGE); 
            }
            txtProyecto.setText(modeloC.getValueAt(k, 6).toString());
            getEntradasDetalle();
    }
    
    private void getEntradas() {
        try {
            try (ResultSet rs = entCont.datos()) {
                
                modeloC.setRowCount(0);
                modeloC.setColumnCount(0);
                
                ResultSetMetaData rsMd = rs.getMetaData();
                
                int cantidadColumnas = rsMd.getColumnCount();
                
                for (int i = 1; i <= cantidadColumnas; i++) {
                    modeloC.addColumn(rsMd.getColumnLabel(i));
                }

                while (rs.next()) {
                    Object[] fila = new Object[cantidadColumnas];
                    for (int i = 0; i < cantidadColumnas; i++) {
                        fila[i]=rs.getObject(i+1);
                    }
                    modeloC.addRow(fila);
                }
            } catch (Exception ex) {
                showMessageDialog(null, ex, "Error", ERROR_MESSAGE);
            }
        } catch (HeadlessException ex) {
            showMessageDialog(null, ex, "Error", ERROR_MESSAGE);
        }
    }
    
    private void getEntradasDetalle() {
        try {
            try (ResultSet rs = entCont.datosDetalle((int) modeloC.getValueAt(k, 0))) {
                
                modeloD.setRowCount(0);
                modeloD.setColumnCount(0);
                
                ResultSetMetaData rsMd = rs.getMetaData();
                
                int cantidadColumnas = rsMd.getColumnCount();
                
                for (int i = 1; i <= cantidadColumnas; i++) {
                    modeloD.addColumn(rsMd.getColumnLabel(i));
                }

                while (rs.next()) {
                    Object[] fila = new Object[cantidadColumnas];
                    for (int i = 0; i < cantidadColumnas; i++) {
                        fila[i]=rs.getObject(i+1);
                    }
                    modeloD.addRow(fila);
                }
                tDetalleEntrada.setModel(modeloD);
            } catch (Exception ex) {
                showMessageDialog(null, ex, "Error", ERROR_MESSAGE);
            }
        } catch (HeadlessException ex) {
            showMessageDialog(null, ex, "Error", ERROR_MESSAGE);
        }
    }
    
    private void nuevoDetalle() {
        try {
            try (ResultSet rs = entCont.datosD()) {
                
                modeloD.setRowCount(0);
                modeloD.setColumnCount(0);
                
                ResultSetMetaData rsMd = rs.getMetaData();
                
                int cantidadColumnas = rsMd.getColumnCount();
                
                for (int i = 1; i <= cantidadColumnas; i++) {
                    modeloD.addColumn(rsMd.getColumnLabel(i));
                }
                    for (int i = 0; i < 12; i++) {
                        modeloD.addRow(new Object[]{"","","",""});
                    }

                tDetalleEntrada.setModel(modeloD);
            } catch (Exception ex) {
                showMessageDialog(null, ex, "Error", ERROR_MESSAGE);
            }
        } catch (HeadlessException ex) {
            showMessageDialog(null, ex, "Error", ERROR_MESSAGE);
        }
    }
    
    private void getDepositos() {
        try {
            try (ResultSet rs = depBD.datoCombo()) {
                
                modelCombo.removeAllElements();
                
                while (rs.next()) {
                    modelCombo.addElement(rs.getObject("dato").toString());
                }
            comboDeposito.setModel(modelCombo);
            } catch (Exception ex) {
                showMessageDialog(null, ex, "Error", ERROR_MESSAGE);
            }
        } catch (HeadlessException ex) {
            showMessageDialog(null, ex, "Error", ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.edisoncor.gui.button.ButtonTask bAnterior;
    private org.edisoncor.gui.button.ButtonTask bBuscar;
    private org.edisoncor.gui.button.ButtonTask bCancelar;
    private org.edisoncor.gui.button.ButtonTask bGuardar;
    private org.edisoncor.gui.button.ButtonTask bImprimir;
    private org.edisoncor.gui.button.ButtonTask bNuevo;
    private org.edisoncor.gui.button.ButtonTask bPrimero;
    private org.edisoncor.gui.button.ButtonTask bSiguiente;
    private org.edisoncor.gui.button.ButtonTask bUltimo;
    private javax.swing.JComboBox comboAjuste;
    private javax.swing.JComboBox comboDeposito;
    private javax.swing.JFormattedTextField dFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tDetalleEntrada;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextArea txtComentarios;
    private javax.swing.JTextField txtProyecto;
    // End of variables declaration//GEN-END:variables
}
