/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package vista;


import controlador.RolControlador;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.YES_NO_OPTION;
import static javax.swing.JOptionPane.YES_OPTION;
import static javax.swing.JOptionPane.showConfirmDialog;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;
import modelo.Rol;


/**
 *
 * @author Ana
 */
public class RolInternalForm extends javax.swing.JInternalFrame {

    /**
     * Constructor que inicializa todos los componentes
     * 
     */
     
    public RolInternalForm() {
        initComponents();
        establecerBotones("Vacio");
        
    }

    Rol rolModel = new Rol();
    RolControlador rolBD = new RolControlador();
    DefaultTableModel modelo = new DefaultTableModel();
    int k;

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        JBnuevo = new org.edisoncor.gui.button.ButtonTask();
        JBcancelar = new org.edisoncor.gui.button.ButtonTask();
        JBguardar = new org.edisoncor.gui.button.ButtonTask();
        JBborrar = new org.edisoncor.gui.button.ButtonTask();
        JBbuscar = new org.edisoncor.gui.button.ButtonTask();
        jPanel3 = new javax.swing.JPanel();
        txtIdUsuario = new javax.swing.JTextField();
        labelRol = new javax.swing.JLabel();
        txtnombreRol = new javax.swing.JTextField();
        labelDescripcion = new javax.swing.JLabel();
        txtDescripcionRol = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TbRol = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Rol");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/rol.png"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(1258, 500));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(51, 94, 137));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabel1.setBackground(new java.awt.Color(51, 94, 137));
        jLabel1.setFont(new java.awt.Font("Aharoni", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ROLES");
        jPanel2.add(jLabel1, java.awt.BorderLayout.CENTER);

        jPanel1.setFont(new java.awt.Font("Aharoni", 0, 12)); // NOI18N
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 2, 5));

        JBnuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/nuevo.png"))); // NOI18N
        JBnuevo.setText("Nuevo");
        JBnuevo.setCategoryFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        JBnuevo.setCategorySmallFont(new java.awt.Font("Aharoni", 0, 5)); // NOI18N
        JBnuevo.setDescription(" ");
        JBnuevo.setFont(new java.awt.Font("Algerian", 0, 5)); // NOI18N
        JBnuevo.setIconTextGap(2);
        JBnuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBnuevoActionPerformed(evt);
            }
        });
        jPanel1.add(JBnuevo);

        JBcancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cancelar.png"))); // NOI18N
        JBcancelar.setText("Cancelar");
        JBcancelar.setCategoryFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        JBcancelar.setCategorySmallFont(new java.awt.Font("Aharoni", 0, 5)); // NOI18N
        JBcancelar.setDescription(" ");
        JBcancelar.setFont(new java.awt.Font("Algerian", 0, 5)); // NOI18N
        JBcancelar.setIconTextGap(2);
        JBcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBcancelarActionPerformed(evt);
            }
        });
        jPanel1.add(JBcancelar);

        JBguardar.setForeground(new java.awt.Color(0, 51, 102));
        JBguardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/guardar.png"))); // NOI18N
        JBguardar.setText("Guardar");
        JBguardar.setCategoryFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        JBguardar.setCategorySmallFont(new java.awt.Font("Aharoni", 0, 5)); // NOI18N
        JBguardar.setDescription(" ");
        JBguardar.setFont(new java.awt.Font("Algerian", 0, 5)); // NOI18N
        JBguardar.setIconTextGap(2);
        JBguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBguardarActionPerformed(evt);
            }
        });
        jPanel1.add(JBguardar);

        JBborrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar.png"))); // NOI18N
        JBborrar.setText("Eliminar");
        JBborrar.setCategoryFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        JBborrar.setCategorySmallFont(new java.awt.Font("Aharoni", 0, 5)); // NOI18N
        JBborrar.setDescription(" ");
        JBborrar.setFont(new java.awt.Font("Algerian", 0, 5)); // NOI18N
        JBborrar.setIconTextGap(2);
        JBborrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBborrarActionPerformed(evt);
            }
        });
        jPanel1.add(JBborrar);

        JBbuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar.png"))); // NOI18N
        JBbuscar.setText("Buscar");
        JBbuscar.setCategoryFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        JBbuscar.setCategorySmallFont(new java.awt.Font("Aharoni", 0, 5)); // NOI18N
        JBbuscar.setDescription(" ");
        JBbuscar.setFont(new java.awt.Font("Algerian", 0, 5)); // NOI18N
        JBbuscar.setIconTextGap(2);
        JBbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBbuscarActionPerformed(evt);
            }
        });
        jPanel1.add(JBbuscar);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del Rol", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Aharoni", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtIdUsuario.setForeground(new java.awt.Color(255, 255, 255));
        txtIdUsuario.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtIdUsuario.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        txtIdUsuario.setFocusable(false);
        txtIdUsuario.setOpaque(false);
        txtIdUsuario.setRequestFocusEnabled(false);
        txtIdUsuario.setSelectionColor(new java.awt.Color(255, 255, 255));
        txtIdUsuario.setVerifyInputWhenFocusTarget(false);
        jPanel3.add(txtIdUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 30, 60, -1));

        labelRol.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 11)); // NOI18N
        labelRol.setText("Rol:");
        jPanel3.add(labelRol, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, 20));

        txtnombreRol.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtnombreRolKeyPressed(evt);
            }
        });
        jPanel3.add(txtnombreRol, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 220, -1));

        labelDescripcion.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 11)); // NOI18N
        labelDescripcion.setText("Descripcion:");
        jPanel3.add(labelDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, 20));
        jPanel3.add(txtDescripcionRol, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 220, -1));

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setForeground(new java.awt.Color(153, 153, 153));

        jPanel5.setBackground(new java.awt.Color(87, 123, 181));

        jLabel8.setFont(new java.awt.Font("Aharoni", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("LISTA DE ROLES");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(254, 254, 254)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TbRol.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rol", "Descripción"
            }
        ));
        TbRol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TbRolMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TbRol);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(218, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Evento del boton borrar
     * @param evt evento al hacer clic sobre el botón eliminar
     */
    private void JBborrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBborrarActionPerformed
        borrar();
    }//GEN-LAST:event_JBborrarActionPerformed

    private void JBnuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBnuevoActionPerformed
        nuevo();
    }//GEN-LAST:event_JBnuevoActionPerformed

    private void JBguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBguardarActionPerformed
        guardar();
    }//GEN-LAST:event_JBguardarActionPerformed

    private void JBcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBcancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_JBcancelarActionPerformed

    private void JBbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBbuscarActionPerformed
        buscar();
    }//GEN-LAST:event_JBbuscarActionPerformed

     /**
     * Método que guarda todos los datos introducidos por el usuario. 
     * Se valida que no haya campos vacíos
     */
    private void guardar(){
       
       if (showConfirmDialog(null, "Está seguro de guardar los datos?", "Confirmar", YES_NO_OPTION) == YES_OPTION) {
                 
             if (txtnombreRol.getText().trim().isEmpty() == true) {
                showMessageDialog(this, "Campo rol vacío, por favor ingrese el nombre del rol", "", JOptionPane.WARNING_MESSAGE);
                return;
             }
            
        rolModel.setNombre(txtnombreRol.getText());
        rolModel.setDescripcion(txtDescripcionRol.getText());  
      
          
           
         if (JBnuevo.isEnabled() == false) {//is Enable true - habilita boton 
                try {
                    
                    rolBD.insert(rolModel);
                    nuevo();
                    getRoles();
                 
                } catch (Exception ex) {
                    //showMessageDialog(null, "Debe ingresar la descripción.", "Atención", INFORMATION_MESSAGE); 
                    
                   showMessageDialog(null,ex.getMessage(), "Error", ERROR_MESSAGE);
                }
            } else {
                 try {                 
                    int idRol = rolBD.devuelveId(rolModel.getNombre());
                    rolBD.update(rolModel, idRol);               
                    showMessageDialog(null, "Actualizado correctamente");
                    limpiar(); 
                    getRoles();
                          
                } catch (Exception ex) {
                    showMessageDialog(null, ex, "Error", ERROR_MESSAGE);
                }     
            }
         }
       }
        
    
    /**
     * Método que limpia todos los campos para ingresar datos nuevos 
     */
    private void nuevo() {
        limpiar();
        establecerBotones("Nuevo");
        try {
            txtnombreRol.requestFocusInWindow();     
        } catch (Exception ex) {
            showMessageDialog(null, ex.toString(), "Error", ERROR_MESSAGE);
        }
    }
    
    /**
     * Método que recupera todos los roles en la tabla
     */
     private void getRoles() {
          
        try {
             modelo.setColumnCount(0);
             modelo.setRowCount(0);
            TbRol.setModel(modelo);
           
            try (ResultSet rs = rolBD.datos()) {
           
                ResultSetMetaData rsMd = rs.getMetaData();
                
                int cantidadColumnas = rsMd.getColumnCount();
                
                for (int i = 1; i <= cantidadColumnas; i++) {
                    modelo.addColumn(rsMd.getColumnLabel(i));
                }

                while (rs.next()) {
                    Object[] fila = new Object[cantidadColumnas];
                    for (int i = 0; i < cantidadColumnas; i++) {
                        fila[i]=rs.getObject(i+1);
                    }
                    modelo.addRow(fila);
                }
            } catch (Exception ex) {
                showMessageDialog(null,  ex, "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (HeadlessException ex) {
            showMessageDialog(null, ex, "Error", ERROR_MESSAGE);
        }
         
      }
    

    /**
     * Método que vacía todos los campos
     */
     private void limpiar() {
        txtnombreRol.setText("");
        txtDescripcionRol.setText("");    
     }
    
    /**
     * Método que elimina roles
     */
     private void borrar(){
          
        if(TbRol.getSelectedRow() == -1){
            showMessageDialog(this, "Por favor seleccione una fila", "Atención", JOptionPane.WARNING_MESSAGE);
        }else{    try {
                
             
               int idRol = rolBD.devuelveId(TbRol.getValueAt(TbRol.getSelectedRow(), 0).toString());
               rolBD.delete(idRol);
               showMessageDialog(null, "Operación exitosa"); 
               limpiar();
               getRoles();
            } catch (Exception ex) {
                showMessageDialog(null, ex, "Error", ERROR_MESSAGE);
            }
        }
    }
    /**
     * Método que cancela la operación de creación de nuevos roles
     */
      private void cancelar(){
        if(showConfirmDialog (null, "Está seguro de cancelar la operación?", "Confirmar", YES_NO_OPTION) == YES_OPTION){
            getRoles();
            limpiar();

            establecerBotones("Edicion");
           if (modelo.getRowCount() == 0) {
                limpiar(); 
                establecerBotones("Vacio"); 
                modoBusqueda(false); 
                return;
            }
            if (k >= 0){
                    limpiar(); 
                    datosActuales(); 
                    establecerBotones("Edicion");
                    modoBusqueda(false);
                    return;
            }
         
            
        }
    }
    
    private void buscar(){
        limpiar();
        establecerBotones("Buscar");
        modoBusqueda(true);
    }
 
     private void establecerBotones(String modo) {
        switch (modo) {
            case "Nuevo":
                JBnuevo.setEnabled(false);
                JBborrar.setEnabled(false);
                JBcancelar.setEnabled(true);
                JBguardar.setEnabled(true);
                JBbuscar.setEnabled(false);
                break;
            case "Edicion":
                JBnuevo.setEnabled(true);
                JBborrar.setEnabled(true);
                JBcancelar.setEnabled(false);
                JBguardar.setEnabled(true);
                JBbuscar.setEnabled(true);
                break;
            case "Vacio":
                JBnuevo.setEnabled(true);
                JBborrar.setEnabled(false);
                JBcancelar.setEnabled(false);
                JBguardar.setEnabled(false);
                JBbuscar.setEnabled(false);
                break;
            case "Buscar":
                JBnuevo.setEnabled(false);
                JBborrar.setEnabled(false);
                JBcancelar.setEnabled(true);
                JBguardar.setEnabled(false);
                JBbuscar.setEnabled(true);
                break;
        }
    }
     
    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
       nuevo();
    }//GEN-LAST:event_formInternalFrameOpened

    private void txtnombreRolKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnombreRolKeyPressed
        if (txtDescripcionRol.isEnabled() == true){
            return;
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if ("*".equals(txtnombreRol.getText())) {

                BuscarForm bf = new BuscarForm( null, true);
                bf.columnas = "nombre, descripcion";
                bf.tabla = "rol";
                bf.order = "nombre";
                bf.filtroBusqueda = "";
                bf.setLocationRelativeTo(this);
                bf.setVisible(true);

                for(int c=0; c<modelo.getRowCount(); c ++){
                    if (modelo.getValueAt(c, 0).toString().equals(bf.retorno)){
                        modoBusqueda(false);
                        establecerBotones("Edicion");
                        k = c;
                        datosActuales();
                        return;
                    }
                }

            }

            for(int c=0; c<modelo.getRowCount(); c ++){
                if (modelo.getValueAt(c, 0).toString().equals(txtnombreRol.getText())){
                    modoBusqueda(false);
                    establecerBotones("Edicion");
                    k = c;
                    datosActuales();
                    return;
                }
            }
        }
    }//GEN-LAST:event_txtnombreRolKeyPressed

    private void TbRolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TbRolMouseClicked
        txtnombreRol.setText(TbRol.getValueAt(TbRol.getSelectedRow(), 0).toString());
        txtDescripcionRol.setText(TbRol.getValueAt(TbRol.getSelectedRow(), 1).toString());
    }//GEN-LAST:event_TbRolMouseClicked

   private void modoBusqueda(boolean v){
        if (v == true) {
        txtnombreRol.setEditable(true);
        txtnombreRol.requestFocusInWindow();
        txtnombreRol.setBackground(Color.yellow);
        txtDescripcionRol.setEnabled(false);
        } else {
        txtnombreRol.setEditable(true);
        txtnombreRol.setBackground(Color.white);
        txtnombreRol.setEnabled(true);
        txtDescripcionRol.setEnabled(true);
        
        }
      }

   private void datosActuales(){
       txtnombreRol.setText(modelo.getValueAt(k, 0).toString());
       txtDescripcionRol.setText(modelo.getValueAt(k, 1).toString());
            
   }
    public static String md5(String input) {

        StringBuffer h = null;

        if (null == input) {
            return null;
        }

        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] b = md.digest(input.getBytes());
            h = new StringBuffer(b.length);
            for (int i = 0; i < b.length; i++) {
                int u = b[i] & 255;
                if (u < 16) {
                    h.append("0").append(Integer.toHexString(u));
                } else {
                    h.append(Integer.toHexString(u));
                }
            }

        } catch (NoSuchAlgorithmException e) {
            e.getMessage();
        }
        return h.toString();
    }

 
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.edisoncor.gui.button.ButtonTask JBborrar;
    private org.edisoncor.gui.button.ButtonTask JBbuscar;
    private org.edisoncor.gui.button.ButtonTask JBcancelar;
    private org.edisoncor.gui.button.ButtonTask JBguardar;
    private org.edisoncor.gui.button.ButtonTask JBnuevo;
    private javax.swing.JTable TbRol;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelDescripcion;
    private javax.swing.JLabel labelRol;
    private javax.swing.JTextField txtDescripcionRol;
    private javax.swing.JTextField txtIdUsuario;
    private javax.swing.JTextField txtnombreRol;
    // End of variables declaration//GEN-END:variables
}
