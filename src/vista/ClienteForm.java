

package vista;

import controlador.ClienteControlador;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.YES_NO_OPTION;
import static javax.swing.JOptionPane.YES_OPTION;
import static javax.swing.JOptionPane.showConfirmDialog;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;
import modelo.Cliente;

/**
 *
 * @author Pathy
 */
public class ClienteForm extends javax.swing.JInternalFrame {

    /**
     * Constructor que inicializa todos los componentes
     * 
     */
     
    public ClienteForm() {
        initComponents();
        this.moveToFront();
        jLabel1.setLayout(null);  
        radioButtonCedula.setSelected(true);
        txtDigVerificador.setVisible(false);
        lbGuion.setVisible(false);
        radioButtonParticular.setSelected(true);
        txtDigVerificador.setEditable(false);     
    }
    
    Cliente cliente = new Cliente();
    ClienteControlador clienteBD = new ClienteControlador();
    DefaultTableModel modelo = new DefaultTableModel();
    DecimalFormat formateador = new DecimalFormat("###,###.##");

    
    /**
     * Método que calcula el dígito verificador del RUC
     * @param p_numero es el número de cédula
     * @param p_basemax la base decimal en la que se calcula
     * @return dígito verificador
     */
    String Pa_Calcular_Dv_11_A(String p_numero, int p_basemax) {
        int v_total, v_resto, k, v_numero_aux, v_digit;
        String v_numero_al = "";

        for (int i = 0; i < p_numero.length(); i++) {
            char c = p_numero.charAt(i);
            if (Character.isDigit(c)) {
                v_numero_al += c;
            } else {
                v_numero_al += (int) c;
            }
        }

        k = 2;
        v_total = 0;

        for (int i = v_numero_al.length() - 1; i >= 0; i--) {
            k = k > p_basemax ? 2 : k;
            v_numero_aux = v_numero_al.charAt(i) - 48;
            v_total += v_numero_aux * k++;
        }

        v_resto = v_total % 11;
        v_digit = v_resto > 1 ? 11 - v_resto : 0;

        return Integer.toString(v_digit);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrupoCedula = new javax.swing.ButtonGroup();
        btnGrupoEmpresa = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        bNuevo = new org.edisoncor.gui.button.ButtonTask();
        bCancelar = new org.edisoncor.gui.button.ButtonTask();
        bGuardar = new org.edisoncor.gui.button.ButtonTask();
        bBorrar = new org.edisoncor.gui.button.ButtonTask();
        bBuscar = new org.edisoncor.gui.button.ButtonTask();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        radioButtonEmpresa = new javax.swing.JRadioButton();
        radioButtonParticular = new javax.swing.JRadioButton();
        lbApellido = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDigVerificador = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        radioButtonRuc = new javax.swing.JRadioButton();
        txtCedula = new javax.swing.JTextField();
        radioButtonCedula = new javax.swing.JRadioButton();
        txtNombre = new javax.swing.JTextField();
        lbGuion = new javax.swing.JLabel();
        comboEstado = new javax.swing.JComboBox();
        txtApellido = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtLimite = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        comboTipoCliente = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbCliente = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Cliente");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cliente.png"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(1258, 550));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(51, 94, 137));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabel1.setBackground(new java.awt.Color(51, 94, 137));
        jLabel1.setFont(new java.awt.Font("Aharoni", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CLIENTES");
        jPanel2.add(jLabel1, java.awt.BorderLayout.CENTER);

        jPanel1.setFont(new java.awt.Font("Aharoni", 0, 12)); // NOI18N
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 2, 5));

        bNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/nuevo.png"))); // NOI18N
        bNuevo.setText("Nuevo");
        bNuevo.setCategoryFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        bNuevo.setCategorySmallFont(new java.awt.Font("Aharoni", 0, 5)); // NOI18N
        bNuevo.setDescription(" ");
        bNuevo.setFont(new java.awt.Font("Algerian", 0, 5)); // NOI18N
        bNuevo.setIconTextGap(2);
        bNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNuevoActionPerformed(evt);
            }
        });
        jPanel1.add(bNuevo);

        bCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cancelar.png"))); // NOI18N
        bCancelar.setText("Cancelar");
        bCancelar.setCategoryFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        bCancelar.setCategorySmallFont(new java.awt.Font("Aharoni", 0, 5)); // NOI18N
        bCancelar.setDescription(" ");
        bCancelar.setFont(new java.awt.Font("Algerian", 0, 5)); // NOI18N
        bCancelar.setIconTextGap(2);
        bCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(bCancelar);

        bGuardar.setForeground(new java.awt.Color(0, 51, 102));
        bGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/guardar.png"))); // NOI18N
        bGuardar.setText("Guardar");
        bGuardar.setCategoryFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        bGuardar.setCategorySmallFont(new java.awt.Font("Aharoni", 0, 5)); // NOI18N
        bGuardar.setDescription(" ");
        bGuardar.setFont(new java.awt.Font("Algerian", 0, 5)); // NOI18N
        bGuardar.setIconTextGap(2);
        bGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(bGuardar);

        bBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar.png"))); // NOI18N
        bBorrar.setText("Inactivar");
        bBorrar.setToolTipText("");
        bBorrar.setCategoryFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        bBorrar.setCategorySmallFont(new java.awt.Font("Aharoni", 0, 5)); // NOI18N
        bBorrar.setDescription(" ");
        bBorrar.setFont(new java.awt.Font("Algerian", 0, 5)); // NOI18N
        bBorrar.setIconTextGap(2);
        bBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBorrarActionPerformed(evt);
            }
        });
        jPanel1.add(bBorrar);

        bBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar.png"))); // NOI18N
        bBuscar.setText("Buscar");
        bBuscar.setCategoryFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        bBuscar.setCategorySmallFont(new java.awt.Font("Aharoni", 0, 5)); // NOI18N
        bBuscar.setDescription(" ");
        bBuscar.setFont(new java.awt.Font("Algerian", 0, 5)); // NOI18N
        bBuscar.setIconTextGap(2);
        bBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(bBuscar);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del Cliente", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Aharoni", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel3.setFocusable(false);
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Aharoni", 0, 11)); // NOI18N
        jLabel2.setText("Nombre:");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 55, 20));

        txtDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionActionPerformed(evt);
            }
        });
        txtDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDireccionKeyTyped(evt);
            }
        });
        jPanel3.add(txtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 220, -1));

        txtTelefono.setToolTipText("");
        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyTyped(evt);
            }
        });
        jPanel3.add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, 220, -1));

        btnGrupoEmpresa.add(radioButtonEmpresa);
        radioButtonEmpresa.setFont(new java.awt.Font("Aharoni", 0, 11)); // NOI18N
        radioButtonEmpresa.setText("Empresa");
        radioButtonEmpresa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radioButtonEmpresaMouseClicked(evt);
            }
        });
        jPanel3.add(radioButtonEmpresa, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, -1, -1));

        btnGrupoEmpresa.add(radioButtonParticular);
        radioButtonParticular.setFont(new java.awt.Font("Aharoni", 0, 11)); // NOI18N
        radioButtonParticular.setText("Particular");
        radioButtonParticular.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radioButtonParticularMouseClicked(evt);
            }
        });
        jPanel3.add(radioButtonParticular, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        lbApellido.setFont(new java.awt.Font("Aharoni", 0, 11)); // NOI18N
        lbApellido.setText("Apellido:");
        jPanel3.add(lbApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, 20));

        jLabel5.setFont(new java.awt.Font("Aharoni", 0, 11)); // NOI18N
        jLabel5.setText("Direccion:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, 20));

        jLabel6.setFont(new java.awt.Font("Aharoni", 0, 11)); // NOI18N
        jLabel6.setText("Telefono/Celular:");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, 20));
        jPanel3.add(txtDigVerificador, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, 36, -1));

        jLabel7.setFont(new java.awt.Font("Aharoni", 0, 11)); // NOI18N
        jLabel7.setText("Estado:");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 50, 20));

        btnGrupoCedula.add(radioButtonRuc);
        radioButtonRuc.setFont(new java.awt.Font("Aharoni", 0, 11)); // NOI18N
        radioButtonRuc.setText("RUC");
        radioButtonRuc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radioButtonRucMouseClicked(evt);
            }
        });
        jPanel3.add(radioButtonRuc, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        txtCedula.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCedulaFocusLost(evt);
            }
        });
        txtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedulaKeyTyped(evt);
            }
        });
        jPanel3.add(txtCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 119, -1));

        btnGrupoCedula.add(radioButtonCedula);
        radioButtonCedula.setFont(new java.awt.Font("Aharoni", 0, 11)); // NOI18N
        radioButtonCedula.setText("Cedula");
        radioButtonCedula.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radioButtonCedulaMouseClicked(evt);
            }
        });
        jPanel3.add(radioButtonCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 73, -1));

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });
        jPanel3.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 220, -1));

        lbGuion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbGuion.setText("-");
        lbGuion.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel3.add(lbGuion, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, 10, -1));

        comboEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Activo", "Inactivo" }));
        jPanel3.add(comboEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 270, 80, -1));

        txtApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApellidoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoKeyTyped(evt);
            }
        });
        jPanel3.add(txtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 220, -1));

        jLabel3.setFont(new java.awt.Font("Aharoni", 0, 11)); // NOI18N
        jLabel3.setText("Codigo");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 40, 20));

        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });
        jPanel3.add(txtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 120, -1));

        jLabel4.setFont(new java.awt.Font("Aharoni", 0, 11)); // NOI18N
        jLabel4.setText("Limite de credito:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, 20));

        txtLimite.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLimiteFocusLost(evt);
            }
        });
        jPanel3.add(txtLimite, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 240, 220, -1));

        jLabel9.setFont(new java.awt.Font("Aharoni", 0, 11)); // NOI18N
        jLabel9.setText("Tipo de Cliente");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, -1, 20));

        comboTipoCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Exento" }));
        jPanel3.add(comboTipoCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, 80, -1));

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setForeground(new java.awt.Color(153, 153, 153));

        tbCliente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tbCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "RUC/Cédula", "Nombre", "Apellido", "Dirección", "Teléfono", "Estado", "Limite de crédito", "Id Cliente", "Tipo de Cliente"
            }
        ));
        tbCliente.setToolTipText("");
        tbCliente.setName(""); // NOI18N
        tbCliente.getTableHeader().setReorderingAllowed(false);
        tbCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbClienteMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbCliente);
        if (tbCliente.getColumnModel().getColumnCount() > 0) {
            tbCliente.getColumnModel().getColumn(0).setResizable(false);
            tbCliente.getColumnModel().getColumn(5).setResizable(false);
        }

        jPanel5.setBackground(new java.awt.Color(87, 123, 181));

        jLabel8.setFont(new java.awt.Font("Aharoni", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("LISTA DE CLIENTES");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(344, 344, 344))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Evento del boton borrar
     * @param evt evento al hacer clic sobre el botón eliminar
     */
    private void bBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBorrarActionPerformed
        borrar();
        limpiar();
        getClientes();
    }//GEN-LAST:event_bBorrarActionPerformed

    private void bNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNuevoActionPerformed
        nuevo();
    }//GEN-LAST:event_bNuevoActionPerformed

    private void bGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGuardarActionPerformed
        try {
            guardar();
        } catch (Exception ex) {
            Logger.getLogger(ClienteForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bGuardarActionPerformed

    private void bCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_bCancelarActionPerformed

    private void bBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBuscarActionPerformed
        buscar();
    }//GEN-LAST:event_bBuscarActionPerformed

    private void txtDireccionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionKeyTyped
        if (txtDireccion.getText().length() > 29) {
            evt.consume();
        }
    }//GEN-LAST:event_txtDireccionKeyTyped

    private void txtTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyTyped

        char c = evt.getKeyChar();

        if (Character.isLetter(c)) {
            getToolkit().beep();
            evt.consume();
        }

        if (txtTelefono.getText().length() > 14) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtTelefonoKeyTyped

    private void radioButtonEmpresaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioButtonEmpresaMouseClicked
        if (radioButtonEmpresa.isSelected() == true) {
            txtApellido.setVisible(false);
            lbApellido.setVisible(false);
            

        }
    }//GEN-LAST:event_radioButtonEmpresaMouseClicked

    private void radioButtonParticularMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioButtonParticularMouseClicked
        if (radioButtonParticular.isSelected() == true) {
            txtApellido.setVisible(true);
            lbApellido.setVisible(true);
        }
    }//GEN-LAST:event_radioButtonParticularMouseClicked

    private void radioButtonRucMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioButtonRucMouseClicked
        if (radioButtonRuc.isSelected() == true) {
            txtDigVerificador.setVisible(true);
            lbGuion.setVisible(true);
            txtCedula.requestFocusInWindow();
        }
    }//GEN-LAST:event_radioButtonRucMouseClicked

    private void txtCedulaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCedulaFocusLost
        // TODO add your handling code here:
        if (radioButtonRuc.isSelected() == true) {
            txtDigVerificador.setText(Pa_Calcular_Dv_11_A(txtCedula.getText(), 11));
        }else{
            txtDigVerificador.setText("");
        }
        //cedula con puntos decimales
        if(!txtCedula.getText().trim().equals("")){
           int ced = Integer.parseInt(txtCedula.getText());
           String formatoCedula = formateador.format(ced);
           txtCedula.setText(formatoCedula);
        }
    }//GEN-LAST:event_txtCedulaFocusLost

    private void txtCedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaKeyTyped

        if (txtCedula.getText().length() > 9) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtCedulaKeyTyped

    private void radioButtonCedulaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioButtonCedulaMouseClicked
        if (radioButtonCedula.isSelected() == true) {
            lbGuion.setVisible(false);
            txtDigVerificador.setVisible(false);
            txtCedula.requestFocusInWindow();
        }
    }//GEN-LAST:event_radioButtonCedulaMouseClicked

    private void txtNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyReleased
        String nomb = txtNombre.getText().toLowerCase();
        int aux = 0;
        String nombre = "";

        for (int i = 0; i < nomb.length(); i++) {

            char letra = nomb.charAt(i);

            if (i == 0) {
                letra = Character.toUpperCase(letra);
            } else if (i > 0 && letra != ' ') {
                letra = Character.toLowerCase(letra);
            }

            if (letra == ' ' || letra == '.') {
                aux = i + 1;
            }

            if (aux == i) {
                letra = Character.toUpperCase(letra);
            }

            nombre = nombre + letra;
        }

        txtNombre.setText(nombre);

    }//GEN-LAST:event_txtNombreKeyReleased

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        char c = evt.getKeyChar();

        if (Character.isDigit(c)) {
            getToolkit().beep();
            evt.consume();
        }

        if (txtNombre.getText().length() > 29) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtApellidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoKeyReleased

        String apell = txtApellido.getText();
        int aux = 0;
        String apellido = "";

        for (int i = 0; i < apell.length(); i++) {

            char letra = apell.charAt(i);

            if (i == 0) {
                letra = Character.toUpperCase(letra);
            } else if (i > 0 && letra != ' ') {
                letra = Character.toLowerCase(letra);
            }

            if (letra == ' ' || letra == '.') {
                aux = i + 1;
            }

            if (aux == i) {
                letra = Character.toUpperCase(letra);
            }

            apellido = apellido + letra;
        }

        txtApellido.setText(apellido);
    }//GEN-LAST:event_txtApellidoKeyReleased

    private void txtApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoKeyTyped
        char c = evt.getKeyChar();

        if (Character.isDigit(c)) {
            getToolkit().beep();
            evt.consume();
        }

        if (txtApellido.getText().length() > 29) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtApellidoKeyTyped

    private void txtCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyPressed
        if (txtNombre.isEnabled() == true){
            return;
        }
       
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if ("*".equals(txtCodigo.getText())) {
                BuscarForm bf = new BuscarForm(null, true);
                bf.columnas = "codigocliente as \"Cód. Cliente\", nombre as \"Nombre\", apellido as \"Apellido\", to_char(cast(cedula as integer),'9G999G999') as \"Cédula\", estado as \"Estado\"";
                bf.tabla = "Cliente";
                bf.order = "codigocliente";
                bf.filtroBusqueda = "";
                bf.setLocationRelativeTo(this);
                bf.setVisible(true);
                
                getClientes();
                for(int c=0; c<modelo.getRowCount(); c ++){ 
                    
                    if (modelo.getValueAt(c, 0).toString().equals(bf.retorno)){
                        modoBusqueda(false);
                        establecerBotones("Edicion");
                        
                     String ced= (String) modelo.getValueAt(c, 1);
                     char dv = ced.charAt(ced.length()-1);
                     
                      if(ced.indexOf('-') != -1){
                        int posGuion = ced.indexOf('-');
                        txtCedula.setText(ced.substring(0, posGuion));
                        txtDigVerificador.setVisible(true);
                        lbGuion.setVisible(true);
                        txtDigVerificador.setText(Character.toString(dv));
                        radioButtonRuc.setSelected(true);
                      }else{
                         txtDigVerificador.setText("");
                         txtDigVerificador.setVisible(false);
                         lbGuion.setVisible(false);
                         radioButtonCedula.setSelected(true);
                         txtCedula.setText((String) modelo.getValueAt(c,1));
                       }
                     txtCodigo.setText((String) modelo.getValueAt(c, 0));
                     txtNombre.setText((String) modelo.getValueAt(c, 2)); 
                     txtApellido.setText((String) modelo.getValueAt(c, 3));
                     txtDireccion.setText((String) modelo.getValueAt(c, 4));
                     txtTelefono.setText((String) modelo.getValueAt(c, 5));
                     comboEstado.setSelectedItem(modelo.getValueAt(c, 6));
                     txtLimite.setText((modelo.getValueAt(c, 7).toString()));
                     comboTipoCliente.setSelectedItem(modelo.getValueAt(c, 9));
                        
                         if(txtApellido.getText().equals("")){
                            radioButtonEmpresa.setSelected(true);
                            radioButtonParticular.setSelected(false);
                            lbApellido.setVisible(false);
                            txtApellido.setVisible(false);
                        }else{
                            radioButtonParticular.setSelected(true);
                            radioButtonEmpresa.setSelected(false);
                            lbApellido.setVisible(true);
                            txtApellido.setVisible(true);
                        }
                    return;
                    }
                }   
            }
              for(int c=0; c<modelo.getRowCount(); c ++){
                  
                if (modelo.getValueAt(c, 0).toString().equals(txtCodigo.getText())){
                    modoBusqueda(false);
                    establecerBotones("Edicion");
                    String ced = (String) modelo.getValueAt(c, 1);
                     char dv = ced.charAt(ced.length()-1);
                     
                      if(ced.indexOf('-') != -1){
                        int posGuion = ced.indexOf('-');
                        txtCedula.setText(ced.substring(0, posGuion));
                        txtDigVerificador.setVisible(true);
                        lbGuion.setVisible(true);
                        txtDigVerificador.setText(Character.toString(dv));
                        radioButtonRuc.setSelected(true);
                      }else{
                                txtDigVerificador.setText("");
                                txtDigVerificador.setVisible(false);
                                lbGuion.setVisible(false);
                                radioButtonCedula.setSelected(true);
                                txtCedula.setText((String) modelo.getValueAt(c,1));
                        }
                     txtCodigo.setText((String) modelo.getValueAt(c, 0));
                     txtNombre.setText((String) modelo.getValueAt(c, 2)); 
                     txtApellido.setText((String) modelo.getValueAt(c, 3));
                     txtDireccion.setText((String) modelo.getValueAt(c, 4));
                     txtTelefono.setText((String) modelo.getValueAt(c, 5));
                     comboEstado.setSelectedItem(modelo.getValueAt(c, 6));
                     txtLimite.setText((modelo.getValueAt(c, 7).toString()));
                     comboTipoCliente.setSelectedItem(modelo.getValueAt(c, 9));
                        
                         if(txtApellido.getText().equals("")){
                            radioButtonEmpresa.setSelected(true);
                            radioButtonParticular.setSelected(false);
                            lbApellido.setVisible(false);
                            txtApellido.setVisible(false);
                        }else{
                            radioButtonParticular.setSelected(true);
                            radioButtonEmpresa.setSelected(false);
                            lbApellido.setVisible(true);
                            txtApellido.setVisible(true);
                        }
                    return;
                    }
            }   
        } 
    }//GEN-LAST:event_txtCodigoKeyPressed

     /**
     * Método que guarda todos los datos introducidos por el usuario. 
     * Se valida que no haya campos vacíos
     */
    private void guardar() throws Exception {
        if (showConfirmDialog(null, "Está seguro de guardar los datos?", "Confirmar", YES_NO_OPTION) == YES_OPTION) {
            ocultarColumna();
            
            if (txtLimite.getText().trim().isEmpty() == true) {
                showMessageDialog(this, "Campo límite de crédito vacío, por favor ingrese un valor ", "Atención", JOptionPane.WARNING_MESSAGE);
                return;
            }
          
            if (txtCedula.getText().trim().isEmpty() == true) {
                showMessageDialog(this, "Campo cédula/ruc vacío, por favor ingrese su cédula o RUC ", "Atención", JOptionPane.WARNING_MESSAGE);
                return;
            }
            
              if (txtCodigo.getText().trim().isEmpty() == true) {
                showMessageDialog(this, "Campo código vacío, por favor ingrese el código del cliente ", "Atención", JOptionPane.WARNING_MESSAGE);
                return;
            }
              
            if (txtLimite.getText().trim().length() == 0) {
                showMessageDialog(this, "Campo límite de crédito vacío, por favor ingrese un valor ", "Atención", JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            if (radioButtonRuc.isSelected() == true && txtDigVerificador.getText().trim().isEmpty()) {
                showMessageDialog(this, "Campo RUC incompleto, por favor ingrese correctamente su RUC", "Atención", JOptionPane.WARNING_MESSAGE);
                return;
            }

            if (txtNombre.getText().trim().isEmpty() == true) {
                showMessageDialog(this, "Campo nombre vacío, por favor ingrese correctamente su nombre", "Atención", JOptionPane.WARNING_MESSAGE);
                return;
            }

            if (radioButtonParticular.isSelected() == true && txtApellido.getText().trim().isEmpty() == true) {
                showMessageDialog(this, "Campo apellido vacío, por favor ingrese correctamente su apellido", "Atención", JOptionPane.WARNING_MESSAGE);
                return;
            }

            if (txtDireccion.getText().trim().isEmpty() == true) {
                showMessageDialog(this, "Campo dirección vacío, por favor ingrese correctamente su dirección", "Atención", JOptionPane.WARNING_MESSAGE);
                return;
            }

            if (txtTelefono.getText().trim().isEmpty() == true) {
                showMessageDialog(this, "Campo teléfono, por favor ingrese correctamente su teléfono", "Atención", JOptionPane.WARNING_MESSAGE);
                return;
            }

            if (comboEstado.getSelectedItem().equals("Inactivo") && bNuevo.isEnabled() == false) {
                showMessageDialog(this, "El cliente debe estar activo. Por favor cambie el estado", "Atención", JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            cliente.setClienteId(clienteBD.nuevoCodigo());
            cliente.setCodigocliente(txtCodigo.getText());
            cliente.setCedula(txtCedula.getText().replace(".", ""));
            cliente.setDv(txtDigVerificador.getText());
            cliente.setNombre(txtNombre.getText());
            cliente.setApellido(txtApellido.getText());
            cliente.setDireccion(txtDireccion.getText());
            cliente.setTelefono(txtTelefono.getText());
            //cuentaCabecera.setTotalSaldo(Integer.parseInt(txtTotal.getText().replace(".", "")));
            cliente.setLimitecredito(Integer.parseInt(txtLimite.getText().replace(".", "")));
            cliente.setEstado((String) comboEstado.getSelectedItem());
            cliente.setTipocliente((String) comboTipoCliente.getSelectedItem());

            if (bNuevo.isEnabled() == false) {
                
                try{
                    clienteBD.insert(cliente);
                    nuevo();
                    //showMessageDialog(null, "Guardado correctamente");
                    getClientes();
                    
                }catch(Exception ex){
                    showMessageDialog(null, ex.getMessage(), "", ERROR_MESSAGE);
                }
                  
               
            } else {
                try {
                    clienteBD.update(cliente);
                    showMessageDialog(null, "Actualizado correctamente");
                    limpiar();
                    getClientes();
                }catch(Exception ex){
                    showMessageDialog(null, ex, "Error", ERROR_MESSAGE); 
                    
                }
            }
        }
    }
    
    /**
     * Método que limpia todos los campos para ingresar datos nuevos 
     */
    private void nuevo() {
        limpiar();
        establecerBotones("Nuevo");
        comboEstado.setEnabled(false);
    }
    
    /**
     * Método que recupera todos los clientes en la tabla
     */
    private void getClientes() {
        
        try {
           
            tbCliente.setModel(modelo);
            modelo.setRowCount(0);
            modelo.setColumnCount(0);
            
            
            try (ResultSet rs = clienteBD.datos()) {
                ResultSetMetaData rsMd = rs.getMetaData();

                int cantidadColumnas = rsMd.getColumnCount();

                //System.out.println("Cantidad columnas "+cantidadColumnas);
                for (int i = 1; i <= cantidadColumnas; i++) {
                    modelo.addColumn(rsMd.getColumnLabel(i));
                }

                while (rs.next()) {
                    Object[] fila = new Object[cantidadColumnas];
                    for (int i = 0; i < cantidadColumnas; i++) {
                        if(i == 7){
                            fila[i] = formateador.format(rs.getInt(i+1));
                        }else if(i==1){
                            String cedula = rs.getString(i+1);
                            //el dv es el ultimo digito de la cedula
                            String dv = cedula.substring(cedula.length()-1, cedula.length());
                            //System.out.println("DV "+dv);
                            
                            //si es un ruc
                            if (cedula.indexOf('-') != -1) {
                                int ci = Integer.parseInt(cedula.substring(0, cedula.length()-2));
                                //System.out.println("ci "+ci);
                                String formatCedula = formateador.format(ci);
                                formatCedula = formatCedula+"-"+dv;
                                fila[i] = formatCedula;
                                //si es solo una cedula
                            }else{
                                int ci2 = Integer.parseInt(rs.getString(i+1));
                                String formatCedula2 = formateador.format(ci2);
                                fila[i] = formatCedula2;        
                            }
                        }else{
                            fila[i] = rs.getObject(i + 1);
                        }
                    }
                    modelo.addRow(fila);
                }
                ocultarColumna();
            } catch (Exception ex) {
                showMessageDialog(null, ex, "Error", ERROR_MESSAGE);
            }
        } catch (HeadlessException ex) {
            showMessageDialog(null, ex, "Error", ERROR_MESSAGE);
        }

    }

    /**
     * Método que vacía todos los campos
     */
    private void limpiar() {
        txtLimite.setText("");
        txtCodigo.setText("");
        txtCedula.setText("");
        txtNombre.setText("");
        txtApellido.setText("");
        txtDireccion.setText("");
        txtTelefono.setText("");
        txtDigVerificador.setText("");
        

        /*if (tbCliente.getRowCount() == 0) {
            establecerBotones("Vacio");
        }*/
    }
    
    /**
     * Método que establece el estado de un cliente de activo a inactivo o viceversa
     */
    private void borrar() {
        if(tbCliente.getSelectedRow() == -1){
            showMessageDialog(this, "Por favor seleccione una fila", "Atención", JOptionPane.WARNING_MESSAGE);
        }else{
            try {
                   clienteBD.delete(tbCliente.getValueAt(tbCliente.getSelectedRow(), 0).toString());
                   showMessageDialog(null, "Operación exitosa");
                   limpiar();
                   getClientes();
                 } 
             catch (Exception ex) {
                showMessageDialog(null, ex, "Error", ERROR_MESSAGE);
            }
        }
    }

    /**
     * Método que cancela la operación de registro de clientes nuevos
     */
    private void cancelar() {
        
        if (showConfirmDialog(null, "Está seguro de cancelar la operación?", "Confirmar", YES_NO_OPTION) == YES_OPTION) {
            ocultarColumna();
            txtCodigo.setEnabled(false);
            limpiar();
            limpiarJTable();
            comboEstado.setEnabled(true);
            getClientes();
            modoBusqueda(false);
            establecerBotones("Edicion");
        }
    }
    
    private void limpiarJTable(){
        int indice = modelo.getRowCount()-1;  //Índices van de 0 a n-1
        //System.out.println("Tabla "+a);   //Para mostrar por consola el resultado
        for(int i=indice;i>=0;i--){  
            //System.out.println("i "+i);    //Para mostrar por consola el resultado
            modelo.removeRow(i);
        }
    }
    
     private void buscar() {
        limpiar();
        limpiarJTable();
        radioButtonEmpresa.setSelected(true);
        establecerBotones("Buscar");
        modoBusqueda(true);
    }

      private void ocultarColumna(){
  
        tbCliente.getColumnModel().getColumn(8).setMaxWidth(0);
        tbCliente.getColumnModel().getColumn(8).setMinWidth(0);
        tbCliente.getColumnModel().getColumn(8).setPreferredWidth(0);
    }
      
      
    
    private void establecerBotones(String modo) {
        switch (modo) {
            case "Nuevo":
                bNuevo.setEnabled(false);
                bBorrar.setEnabled(false);
                bCancelar.setEnabled(true);
                bGuardar.setEnabled(true);
                bBuscar.setEnabled(false);

                break;
            case "Edicion":
                bNuevo.setEnabled(true);
                bBorrar.setEnabled(true);
                bCancelar.setEnabled(false);
                bGuardar.setEnabled(true);
                bBuscar.setEnabled(true);
                break;
            case "Vacio":
                bNuevo.setEnabled(true);
                bBorrar.setEnabled(false);
                bCancelar.setEnabled(false);
                bGuardar.setEnabled(false);
                bBuscar.setEnabled(false);
                break;
            case "Buscar":
                bNuevo.setEnabled(false);
                bBorrar.setEnabled(false);
                bCancelar.setEnabled(true);
                bGuardar.setEnabled(false);
                bBuscar.setEnabled(false);
                break;      
        }
    }
    
    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        char c = evt.getKeyChar();

        if (txtCodigo.getText().length() > 8) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void tbClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbClienteMouseClicked
      
      if(txtApellido.isEnabled() == false){
            evt.consume();
      }else{
        //variable ced que almacena el número de cédula de la fila seleccionada
        String ced = tbCliente.getValueAt(tbCliente.getSelectedRow(), 1).toString();
        

        // variable dv que almacena el dígito verificador en caso de que sea un RUC
        char dv = ced.charAt(ced.length() - 1);

        if (evt.isMetaDown()) {
            return;
        } else {
            if (bNuevo.isEnabled() == true) {
                //Averiguo si es un RUC buscando un guión en el campo cédula
                if (ced.indexOf('-') != -1) {
                    int posGuion = ced.indexOf('-'); //busco la posición del guion
                    txtDigVerificador.setVisible(true);
                    lbGuion.setVisible(true);
                    txtDigVerificador.setText(Character.toString(dv));
                    radioButtonRuc.setSelected(true);
                    //int ci = Integer.parseInt(ced.substring(0, posGuion));
                    //String formatoCedula = formateador.format(ci);
                    //txtCedula.setText(formatoCedula); //establezco el valor de la cedula desde la primera posicion hasta una la posicion en que se encontró el guión
                    txtCedula.setText((ced.substring(0, posGuion))); //establezco el valor de la cedula desde la primera posicion hasta una la posicion en que se encontró el guión
                    
                    //sino es una cédula
                } else {
                    txtDigVerificador.setText("");
                    txtDigVerificador.setVisible(false);
                    lbGuion.setVisible(false);
                    radioButtonCedula.setSelected(true);
                    txtCedula.setText(tbCliente.getValueAt(tbCliente.getSelectedRow(), 1).toString());
                    //int ci2 = Integer.parseInt(tbCliente.getValueAt(tbCliente.getSelectedRow(), 1).toString());
                    //String formatoCedula2 = formateador.format(ci2);
                    //txtCedula.setText(formatoCedula2);
                }

                // si el campo apellido está vacío entonces es una empresa
                if (tbCliente.getValueAt(tbCliente.getSelectedRow(), 3).toString().equals("")) {
                    lbApellido.setVisible(false);
                    radioButtonEmpresa.setSelected(true);
                    txtApellido.setText("");
                    txtApellido.setVisible(false);
                } else {
                    radioButtonParticular.setSelected(true);
                    lbApellido.setVisible(true);
                    txtApellido.setVisible(true);
                    txtApellido.setText(tbCliente.getValueAt(tbCliente.getSelectedRow(), 3).toString());
                }
                txtCodigo.setText(tbCliente.getValueAt(tbCliente.getSelectedRow(), 0).toString());
                txtNombre.setText(tbCliente.getValueAt(tbCliente.getSelectedRow(), 2).toString());
                txtDireccion.setText(tbCliente.getValueAt(tbCliente.getSelectedRow(), 4).toString());
                txtTelefono.setText(tbCliente.getValueAt(tbCliente.getSelectedRow(), 5).toString());
                comboEstado.setSelectedItem(tbCliente.getValueAt(tbCliente.getSelectedRow(), 6).toString());
                comboTipoCliente.setSelectedItem(tbCliente.getValueAt(tbCliente.getSelectedRow(), 9).toString());
                txtLimite.setText(tbCliente.getValueAt(tbCliente.getSelectedRow(), 7).toString());
                //int limite = Integer.parseInt(tbCliente.getValueAt(tbCliente.getSelectedRow(), 7).toString());
                //String formatoLimite = formateador.format(limite);
                //txtLimite.setText(formatoLimite);   
            }
        }
      }  
    }//GEN-LAST:event_tbClienteMouseClicked

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        nuevo();
        ocultarColumna();
    }//GEN-LAST:event_formInternalFrameOpened

    private void txtLimiteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLimiteFocusLost
         //limite de credito con puntos decimales
        if(!txtLimite.getText().trim().equals("")){
           int limite = Integer.parseInt(txtLimite.getText().replace(".", "").trim());
           String formatoLimite = formateador.format(limite);
           txtLimite.setText(formatoLimite);
        }
    }//GEN-LAST:event_txtLimiteFocusLost

    private void txtDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionActionPerformed

  private void modoBusqueda(boolean v){
         
        if (v == true) {
            txtCodigo.setEnabled(true);
            txtCodigo.requestFocusInWindow();
            txtCodigo.setBackground(Color.yellow);
            txtApellido.setEnabled(false);
            txtNombre.setEnabled(false);
            txtDireccion.setEnabled(false);
            txtTelefono.setEnabled(false);
            comboEstado.setEnabled(false);
            comboTipoCliente.setEnabled(false);
            txtCedula.setEnabled(false);
            txtDigVerificador.setEnabled(false);
            tbCliente.setEnabled(false);
            txtLimite.setEnabled(false);
        
        } else {
            txtCodigo.setEnabled(true);
            txtCodigo.setBackground(Color.white);
            txtDigVerificador.setEnabled(true);
            txtLimite.setEnabled(true);
            txtApellido.setEnabled(true);
            txtApellido.setEnabled(true);
            txtNombre.setEnabled(true);
            txtDireccion.setEnabled(true);
            txtTelefono.setEnabled(true);
            comboTipoCliente.setEnabled(true);
            comboEstado.setEnabled(true);
            txtCedula.setEnabled(true);
            tbCliente.setEnabled(true);
        
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.edisoncor.gui.button.ButtonTask bBorrar;
    private org.edisoncor.gui.button.ButtonTask bBuscar;
    private org.edisoncor.gui.button.ButtonTask bCancelar;
    private org.edisoncor.gui.button.ButtonTask bGuardar;
    private org.edisoncor.gui.button.ButtonTask bNuevo;
    private javax.swing.ButtonGroup btnGrupoCedula;
    private javax.swing.ButtonGroup btnGrupoEmpresa;
    private javax.swing.JComboBox comboEstado;
    private javax.swing.JComboBox comboTipoCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbApellido;
    private javax.swing.JLabel lbGuion;
    private javax.swing.JRadioButton radioButtonCedula;
    private javax.swing.JRadioButton radioButtonEmpresa;
    private javax.swing.JRadioButton radioButtonParticular;
    private javax.swing.JRadioButton radioButtonRuc;
    private javax.swing.JTable tbCliente;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDigVerificador;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtLimite;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
